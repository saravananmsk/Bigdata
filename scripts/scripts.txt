indextest

oracle[sql,pl/sql]
sqltuning
Unix script
Datastage
JSP
Java
Hadoop
Hive
mysql
sqoop
Hbase
scala
spark

----oracle---
create or replace procedure p_loop as
a number;
b number;
begin
a:=1;
for i in a..20
loop
b:= a+i;
insert into test_123 values (b);
commit;
end loop;
end;


 
create tablespace test datafile   'C:\oraclexe\app\oracle\oradata\XE\test.dbf' size 50m;

create table test_123( num number);

alter system set utl_file_dir='c:\temp' scope=SPFILE;
SQL> CONNECT / AS SYSDBA
Connected.
SQL> shutdown immediate;
Database closed.
Database dismounted.
ORACLE instance shut down.
SQL> startup open
ORACLE instance started.

Total System Global Area 6797832192 bytes
Fixed Size                  2188648 bytes
Variable Size            4378856088 bytes
Database Buffers         2399141888 bytes
Redo Buffers               17645568 bytes
Database mounted.
Database opened.
SQL>


##utl file###

declare 
  fhandle  utl_file.file_type;
begin
  fhandle := utl_file.fopen(
                'c:\temp'     -- File location
              , 'test_file.txt' -- File name
              , 'w' -- Open mode: w = write. 
                  );

  utl_file.put(fhandle, 'Hello world!'
                      || CHR(10));
  utl_file.put(fhandle, 'Hello again!');

  utl_file.fclose(fhandle);
exception
  when others then 
    dbms_output.put_line('ERROR: ' || SQLCODE 
                      || ' - ' || SQLERRM);
    raise;
end;
/

###external tables####

CREATE TABLE admin_ext_employees
                   (employee_id       NUMBER(4), 
                    first_name        VARCHAR2(20),
                    last_name         VARCHAR2(25), 
                    job_id            VARCHAR2(10),
                    manager_id        NUMBER(4),
                    hire_date         DATE,
                    salary            NUMBER(8,2),
                    commission_pct    NUMBER(2,2),
                    department_id     NUMBER(4),
                    email             VARCHAR2(25) 
                   ) 
     ORGANIZATION EXTERNAL 
     ( 
       TYPE ORACLE_LOADER 
       DEFAULT DIRECTORY DIR_TEMP
       ACCESS PARAMETERS 
       ( 
         records delimited by newline 
         badfile DIR_TEMP:'empxt%a_%p.bad' 
         logfile DIR_TEMP:'empxt%a_%p.log' 
         fields terminated by ',' 
         missing field values are null 
         ( employee_id, first_name, last_name, job_id, manager_id, 
           hire_date char date_format date mask "dd-mon-yyyy", 
           salary, commission_pct, department_id, email 
         ) 
       ) 
       LOCATION ('empxt1.txt', 'empxt2.txt') 
     ) 
     PARALLEL 
     REJECT LIMIT UNLIMITED; 
-- enable parallel for loading (good if lots of data to load)
ALTER SESSION ENABLE PARALLEL DML;
-- load the data in hr employees table
INSERT INTO employees (employee_id, first_name, last_name, job_id, manager_id,
                       hire_date, salary, commission_pct, department_id, email) 
            SELECT * FROM admin_ext_employees;
commit;

----------------SQL Tuning--------------------------

set autotrace on;
set  tkprof;  --> server access needed.

--------------------------------------------------------------

 script



age=29

if [ $age -lt 30 ]

then

echo " you are still under age 30"

fi
Dec'18
#@bin/ksh
echo "This is test script" 


addnumber.ksh

echo "This program is to mutiple numbers you enter"

echo " Enter the fist number"

read a

echo " Enter the second numner"

read b

#c=$(expr "$a" + "$b")

c=`expr $a + $b`

echo " Result of mutiplication $a and $b  is $c"


 cat connectoracle.ksh
#!/bin/ksh
#This script is written to test connectivity with oracle database
sqlplus XXX/xxx@xe <<EOF
create table test_10_Dec_18 (sno number, name varchar2(50));
insert into test_10_Dec_18 values  (1,'test1');
commit;
EOF

-----------------------------------------------------------------------------

Datastage
--------------------------------------------------------------
JSP
-------------------------------------------------------------
Java

AddNumber.java

import java.util.Scanner;
public class AddNumber {
public static void main(String args[])
{
int a,b,c;
a=10;
b=20;
c=a+b;
System.out.println("sum of two numbers"+c);
}
}

-----------------------------------------------------------------------------
Hadoop

hadoop fs -put /opt/data/hadooptest.txt /opt/data/saravana
hadoop fs -ls /opt/data/saravana
hadoop fs -cat /opt/data/saravana/hadooptest.txt
------------------------------------------------------------------------
Hive
-------------------
mysql
----------------------------
sqoop
--------------------------
Hbase
----------------------
scala
-----------------------
spark
--------------------------------------------------------------
